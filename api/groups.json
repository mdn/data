{
    "Alarm API": {
        "overview":   [ "Alarm API"],
        "interfaces": [ "MozAlarmsManager" ],
        "methods":    [ "Navigator.mozSetMessageHandler()"],
        "properties": [ "Navigator.mozAlarms" ],
        "events":     []
    },
    "Ambient Light Events": {
        "overview":   [ "Ambient Light Events"],
        "interfaces": [ "DeviceLightEvent" ],
        "methods":    [],
        "properties": [ "Window.ondevicelight" ],
        "events":     [ "devicelight" ]
    },
    "App Cache": {
        "guides":     [ { "url":   "/en-US/docs/Web/HTML/Using_the_application_cache",
                          "title": "Using the application cache" } ],
        "interfaces": [],
        "methods":    [],
        "properties": [],
        "events":     [ "cached",
                        "checking",
                        "downloading",
                        "noupdate",
                        "obsolete",
                        "updateready" ]
    },
    "Application Compatibility Layer": {
        "interfaces": [ "HTMLExtAppElement"],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Apps": {
        "guides":     [ { "url":   "/Apps/Build/JavaScript_API",
                          "title": "App Installation and Management APIs" } ],
        "interfaces": [ "DOMApplication",
                        "DOMApplicationsManager",
                        "DOMApplicationsRegistry",
                        "InstallTrigger" ],
        "methods":    [],
        "properties": [ "Navigator.mozApps"],
        "events":     []
    },
    "Archive API": {
        "interfaces": [ "ArchiveReader",
                        "ArchiveRequest" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Audio Channels API": {
        "overview":   [ "Audio Channels API" ],
        "interfaces": [ "MozAudioChannelManager",
                        "BrowserElementAudioChannel" ],
        "methods":    [],
        "properties": [ "Navigator.mozAudioChannelManager",
                        "HTMLMediaElement.mozAudioChannelType",
                        "HTMLMediaElement.mozchannelpaused",
                        "HTMLMediaElement.onmozinterrupbegin",
                        "HTMLMediaElement.onmozinterruptend" ],
        "events":     [ "headphoneschange",
                        "mozinterruptbegin",
                        "mozinterruptend" ]
    },
    "Battery API": {
        "overview":   [ "Battery Status API" ],
        "guides":     [ { "url":   "/Apps/Build/gather_and_modify_data/retrieving_battery_status_information",
                          "title": "Retrieving battery status information" } ],
        "interfaces": [ "BatteryManager" ],
        "methods":    [ "Navigator.getBattery()"],
        "properties": [ "Navigator.battery" ],
        "events":     [ "chargingchange",
                        "chargingtimechange",
                        "dischargingtimechange",
                        "levelchange" ]
    },
    "Beacon": {
        "overview":   [ "Beacon API" ],
        "interfaces": [ "Navigator",
                        "WorkerNavigator" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Broadcast Channel API": {
        "overview":   [ "Broadcast Channel API" ],
        "interfaces": [ "BroadcastChannel" ],
        "methods":    [],
        "properties": [],
        "events":     [ "message" ]
    },
    "Browser API": {
        "guides":     [ { "url":   "/docs/Web/API/Using_the_Browser_API",
                          "title": "Using the Browser API" } ],
        "interfaces": [],
        "methods":    [ "HTMLIFrameElement.addNextPaintListener()",
                        "HTMLIFrameElement.clearMatch()",
                        "HTMLIFrameElement.download()",
                        "HTMLIFrameElement.executeScript()",
                        "HTMLIFrameElement.findAll()",
                        "HTMLIFrameElement.findNext()",
                        "HTMLIFrameElement.getActive()",
                        "HTMLIFrameElement.getCanGoBack()",
                        "HTMLIFrameElement.getCanGoForward()",
                        "HTMLIFrameElement.getContentDimensions()",
                        "HTMLIFrameElement.getMainfest()",
                        "HTMLIFrameElement.getMuted()",
                        "HTMLIFrameElement.getScreenshot()",
                        "HTMLIFrameElement.getStructuredData()",
                        "HTMLIFrameElement.goBack()",
                        "HTMLIFrameElement.goForward()",
                        "HTMLIFrameElement.getVisible()",
                        "HTMLIFrameElement.getVolume()",
                        "HTMLIFrameElement.mute()",
                        "HTMLIFrameElement.purgeHistory()",
                        "HTMLIFrameElement.reload()",
                        "HTMLIFrameElement.removeNextPaintListener()",
                        "HTMLIFrameElement.sendMouseEvent()",
                        "HTMLIFrameElement.sendTouchEvent()",
                        "HTMLIFrameElement.setActive()",
                        "HTMLIFrameElement.setInputMethodActive()",
                        "HTMLIFrameElement.setNFCFocus()",
                        "HTMLIFrameElement.setVisible()",
                        "HTMLIFrameElement.setVolume()",
                        "HTMLIFrameElement.stop()",
                        "HTMLIFrameElement.unmute()",
                        "HTMLIFrameElement.zoom()" ],
        "properties": [],
        "events":     [ "mozbrowseractivitydone",
                        "mozbrowserasyncscroll",
                        "mozbrowseraudioplaybackchange",
                        "mozbrowsercaretstatechanged",
                        "mozbrowserclose",
                        "mozbrowsercontextmenu",
                        "mozbrowserdocumentfirstpaint",
                        "mozbrowsererror",
                        "mozbrowserfindchange",
                        "mozbrowserfirstpaint",
                        "mozbrowsericonchange",
                        "mozbrowserloadend",
                        "mozbrowserloadstart",
                        "mozbrowserlocationchange",
                        "mozbrowsermanifestchange",
                        "mozbrowsermetachange",
                        "mozbrowseropensearch",
                        "mozbrowseropentab",
                        "mozbrowseropenwindow",
                        "mozbrowserresize",
                        "mozbrowserscroll",
                        "mozbrowserscrollareachanged",
                        "mozbrowserscrollviewchange",
                        "mozbrowsersecuritychange",
                        "mozbrowserselectionstatechanged",
                        "mozbrowsershowmodalprompt",
                        "mozbrowsertitlechange",
                        "mozbrowserusernameandpasswordrequired",
                        "mozbrowservisibilitychange" ]
    },
    "Bluetooth API (Firefox OS)": {
        "overview":   [ "Web Bluetooth API" ],
        "interfaces": [ "BluetoothAdapter",
                        "BluetoothAdapterEvent",
                        "BluetoothAttributeEvent",
                        "BluetoothClassOfDevice",
                        "BluetoothDevice",
                        "BluetoothDeviceEvent",
                        "BluetoothDiscoveryHandle",
                        "BluetoothGatt",
                        "BluetoothGattCharacteristic",
                        "BluetoothGattCharacteristicEvent",
                        "BluetoothGattDescriptor",
                        "BluetoothGattServer",
                        "BluetoothGattService",
                        "BluetoothLeDeviceEvent",
                        "BluetoothManager",
                        "BluetoothPairingEvent",
                        "BluetoothPairingHandle",
                        "BluetoothPairingListener",
                        "BluetoothStatusChangedEvent" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Bluetooth API": {
        "overview":   [ "Web Bluetooth API" ],
        "interfaces": [ "BluetoothAdvertisingData",
                        "BluetoothDevice",
                        "BluetoothGATTCharacteristic",
                        "BluetoothGATTDescriptor",
                        "BluetoothGATTRemoteServer",
                        "BluetoothGATTService" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Camera API": {
        "overview":   [ "Camera API" ],
        "interfaces": [ "CameraCapabilities",
                        "CameraControl",
                        "CameraManager" ],
        "methods":    [ "Navigator.mozCameras" ],
        "properties": [],
        "events":     []
    },
    "Canvas API": {
        "overview":   [ "Canvas API" ],
        "interfaces": [ "Canvas",
                        "CanvasGradient",
                        "CanvasImageSource",
                        "CanvasPattern",
                        "CanvasRenderingContext2D",
                        "HTMLCanvasElement",
                        "ImageBitmap",
                        "ImageBitmapFactories",
                        "ImageBitmapRenderingContext",
                        "ImageData",
                        "OffscreenCanvas",
                        "Path2D",
                        "RenderingContext",
                        "TextMetrics" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Channel Messaging API": {
        "overview":   [ "Channel Messaging API" ],
        "interfaces": [ "MessageChannel",
                        "MessagePort",
                        "PortCollection" ],
        "methods":    [],
        "properties": [],
        "events":     [ "message" ]
    },
    "Clipboard API": {
        "interfaces": [ "ClipboardEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "beforecopy",
                        "beforecut",
                        "beforepaste",
                        "copy",
                        "cut",
                        "paste" ]
    },
    "Console API": {
        "interfaces": [ "Console" ],
        "methods":    [],
        "properties": [ "Window.console",
                        "WorkerGlobalScope.console" ],
        "events":     []
    },
    "Contacts API": {
        "overview":   [ "Contacts API"],
        "interfaces": [ "ContactManager",
                        "MozContact",
                        "MozContactChangeEvent" ],
        "methods":    [],
        "properties": [ "Navigator.mozContacts" ],
        "events":     [ "success",
                        "error",
                        "contactchange" ]
    },
    "Console API": {
        "interfaces": [ "Console" ],
        "methods": [],
        "properties": [],
        "events": []
    },
    "CSS Counter Styles": {
        "overview":   [ "CSS Counter Styles" ],
        "interfaces": [ "CSSCounterStyleRule" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "CSS Font Loading API": {
        "overview":   [ "CSS Font Loading API" ],
        "interfaces": [ "FontFace",
                        "FontFaceSet",
                        "FontFaceSource",
                        "FontFaceSetLoadEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "loading",
                        "loadingdone",
                        "loadingerror" ]
    },
    "CSSOM": {
        "overview":   [ "CSS Object Model" ],
        "interfaces": [ "CaretPosition",
                        "CSS",
                        "CSSConditionRule",
                        "CSSGroupingRule",
                        "CSSKeyframeRule",
                        "CSSKeyframesRule",
                        "CSSMediaRule",
                        "CSSNamespaceRule",
                        "CSSPageRule",
                        "CSSRule",
                        "CSSRuleList",
                        "CSSStyleDeclaration",
                        "CSSStyleRule",
                        "CSSStyleSheet",
                        "CSSSupportsRule",
                        "LinkStyle",
                        "StyleSheet",
                        "StyleSheetList",
                        "TransitionEvent",
                        "AnimationEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "animationstart",
                        "animationend",
                        "animationiteration",
                        "transitionend" ]
    },
    "CSSOM View": {
        "interfaces": [ "MediaQueryList",
                        "MediaQueryListListener",
                        "Screen" ],
        "methods":    [],
        "properties": [],
        "events":     [ "resize",
                        "scroll" ]
    },
    "Data Store API": {
        "overview":   [ "Data Store API" ],
        "interfaces": [ "DataStore",
                        "DataStoreChangeEvent",
                        "DataStoreCursor",
                        "DataStoreTask" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Device Orientation Events": {
        "guides":     [ { "url":   "/docs/Web/API/Detecting_device_orientation",
                          "title": "Detecting device orientation" } ],
        "interfaces": [ "DeviceAcceleration",
                        "DeviceMotionEvent",
                        "DeviceOrientationEvent",
                        "DeviceRotationRate" ],
        "methods":    [],
        "properties": [],
        "events":     [ "deviceorientation",
                        "compassneedscalibration",
                        "devicemotion" ]
    },
    "Device Storage API": {
        "overview":   [ "Device Storage API"],
        "interfaces": [ "DeviceStorage",
                        "DeviceStorageChangeEvent" ],
        "methods":    [ "Navigator.getDeviceStorage()",
                        "Navigator.getDeviceStorages()" ],
        "properties": [],
        "events":     [ "change" ]
    },
    "Directory Upload API": {
        "interfaces": [ "Directory" ],
        "methods":    [ "HTMLInputElement.getFilesAndDirectories()",
                        "HTMLInputElement.chooseDirectory()",
                        "DataTransfer.getFilesAndDirectories()" ],
        "properties": [ "HTMLInputElement.directory",
                        "HTMLInputElement.isFilesAndDirectoriesSupported" ],
        "events":     []
    },
    "DOM": {
        "overview":   [ "Document Object Model" ],
        "interfaces": [ "Attr",
                        "ByteString",
                        "CDATASection",
                        "CharacterData",
                        "ChildNode",
                        "CSSPrimitiveValue",
                        "CSSValue",
                        "CSSValueList",
                        "Comment",
                        "CustomEvent",
                        "Document",
                        "DocumentFragment",
                        "DocumentType",
                        "DOMConfiguration",
                        "DOMError",
                        "DOMErrorHandler",
                        "DOMException",
                        "DOMImplementation",
                        "DOMImplementationList",
                        "DOMImplementationRegistry",
                        "DOMImplementationSource",
                        "DOMLocator",
                        "DOMObject",
                        "DOMParser",
                        "DOMPoint",
                        "DOMRect",
                        "DOMString",
                        "DOMTimeStamp",
                        "DOMTokenList",
                        "DOMUserData",
                        "Element",
                        "ElementTraversal",
                        "Entity",
                        "EntityReference",
                        "Event",
                        "EventTarget",
                        "HTMLCollection",
                        "MutationObserver",
                        "Node",
                        "NodeFilter",
                        "NodeIterator",
                        "NodeList",
                        "NonDocumentTypeChildNode",
                        "ProcessingInstruction",
                        "PromiseResolver",
                        "Range",
                        "Text",
                        "TextDecoder",
                        "TextEncoder",
                        "TimeRanges",
                        "TreeWalker",
                        "TypeInfo",
                        "UserDataHandler",
                        "USVString",
                        "XMLDocument" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "DOM (Non-standard)": {
        "interfaces": [ "DOMCursor",
                        "DOMRequest" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "DOM Events": {
        "interfaces": [ "Event",
                        "EventListener",
                        "EventTarget",
                        "CompositionEvent",
                        "FocusEvent",
                        "InputEvent",
                        "KeyboardEvent",
                        "MouseEvent",
                        "MouseScrollEvent",
                        "MouseWheelEvent",
                        "MutationEvent",
                        "ProgressEvent",
                        "UIEvent",
                        "WheelEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "abort",
                        "beforeinput",
                        "blur",
                        "click",
                        "compositionstart",
                        "compositionupdate",
                        "compositionend",
                        "dblclick",
                        "error",
                        "focus",
                        "focusin",
                        "focusout",
                        "input",
                        "keydown",
                        "keyup",
                        "load",
                        "mousedown",
                        "mouseenter",
                        "mouseleave",
                        "mousemove",
                        "mouseout",
                        "mouseover",
                        "mouseup",
                        "resize",
                        "scroll",
                        "select",
                        "unload",
                        "wheel" ]
    },
    "Download API": {
        "interfaces": [ "DownloadEvent",
                        "DOMDownloadManager",
                        "DOMDownload" ],
        "methods":    [],
        "properties": [ "Navigator.mozDownloadManager"],
        "events":     [ "statechange" ]
    },
    "Encoding API": {
        "overview":   [ "Encoding API"],
        "interfaces": [ "TextDecoder",
                        "TextEncoder" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Encrypted Media Extensions": {
        "overview":   [ "Encrypted Media Extensions API" ],
        "interfaces": [ "MediaKeySessionEvent",
                        "MediaKeys",
                        "MediaKeySession",
                        "MediaKeyStatusMap",
                        "MediaKeySystemAccess",
                        "MediaKeySystemConfiguration" ],
        "methods":    [ "Navigator.requestMediaKeySystemAccess()",
                        "HTMLMediaElement.setMediaKeys()" ],
        "properties": [ "HTMLMediaElement.mediaKeys",
                        "HMTLMediaElement.onencrypted" ],
        "events":     [ "keystatuschange",
                        "message",
                        "encrypted",
                        "waitingforkey" ]
    },
    "Engineering Mode API": {
        "interfaces": [ "EngineeringMode" ],
        "methods":    [],
        "properties": [],
        "events":     [ "message" ]
    },
    "Fetch API": {
        "overview":   [ "Fetch API"],
        "interfaces": [ "GlobalFetch",
                        "Body",
                        "Headers",
                        "Request",
                        "Response" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "File API": {
        "guides":     [ { "url":   "/docs/Using_files_from_web_applications",
                          "title": "Using files from Web applications" },
                        { "url":   "/docs/Extensions/Using_the_DOM_File_API_in_chrome_code",
                          "title": "Using the DOM File API in chrome code" } ],
        "interfaces": [ "File",
                        "FileList",
                        "FileReader",
                        "FileReaderSync",
                        "Blob" ],
        "methods":    [],
        "properties": [],
        "events":     [ "loadstart",
                        "progress",
                        "abort",
                        "error",
                        "load",
                        "loadend" ]
    },
    "File System API": {
        "overview":   [ "File and Directory Entries API" ],
        "interfaces": [ "FileError",
                        "FileException",
                        "FileHandle",
                        "FileRequest",
                        "FileSystemDirectoryEntry",
                        "FileSystemDirectoryEntrySync",
                        "FileSystemDirectoryReader",
                        "FileSystemDirectoryReaderSync",
                        "FileSystemEntry",
                        "FileSystemEntrySync",
                        "FileSystemFileEntry",
                        "FileSystemFileEntrySync",
                        "FileSystemFlags",
                        "FileSystem",
                        "FileSystemSync",
                        "HTMLInputElement",
                        "LocalFileSystem",
                        "LocalFileSystemSync",
                        "LockedFile",
                        "Metadata" ],
        "methods":    [ "Window.requestFileSystem()",
                        "Window.resolveLocalFileSystemURL()",
                        "WorkerGlobalScope.requestFileSystemSync()" ],
        "properties": [],
        "events":     [ "error",
                        "writeend"
                      ]
    },
    "Firefox OS": {
        "interfaces": [ "MozAlarmsManager",
                        "MozMobileNetworkInfo",
                        "MozWifiP2pGroupOwner",
                        "MozWifiP2pManager" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "FMRadio API": {
        "overview":   [ "WebFM API" ],
        "interfaces": [ "FMRadio" ],
        "methods":    [],
        "properties": [ "Navigator.mozFMRadio" ],
        "events":     [ "antennaavailablechange",
                        "frequencychange",
                        "disabled",
                        "enabled" ]
    },
    "Fullscreen API": {
        "overview":   [ "Fullscreen API" ],
        "interfaces": [],
        "methods":    [ "Document.exitFullscreen()",
                        "Element.requestFullscreen()" ],
        "properties": [ "Document.fullscreen",
                        "Document.fullscreenElement",
                        "Document.onfullscreenchange",
                        "Document.onfullscreenerror" ],
        "events":     [ "fullscreenchange",
                        "fullscreenerror" ]
    },
    "Frame Timing API": {
        "overview":   [ "Frame Timing API" ],
        "interfaces": [ "Performance",
                        "PerformanceEntry",
                        "PerformanceFrameTiming",
                        "PerformanceObserver" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Gamepad API": {
        "overview":   [ "Gamepad API" ],
        "guides":     [ { "url":   "/docs/Games/Techniques/Controls_Gamepad_API",
                          "title": "Implementing controls using the Gamepad API" } ],
        "interfaces": [ "Gamepad",
                        "GamepadButton",
                        "GamepadEvent"],
        "methods":    [ "Navigator.getGamepads()" ],
        "properties": [ "Window.ongamepadconnected",
                        "Window.ongamepaddisconnected" ],
        "events":     [ "gamepadconnected",
                        "gamepaddisconnected" ]
    },
    "Geolocation API": {
        "guide":      [ { "url":   "/en-US/docs/Web/API/Geolocation/Using_geolocation",
                          "title": "Using geolocation" } ],
        "interfaces": [ "Coordinates",
                        "Geolocation",
                        "Position",
                        "PositionError",
                        "PositionOptions" ],
        "methods":    [],
        "properties": [ "Navigator.geolocation" ],
        "events":     []
    },
    "Geometry Interfaces": {
        "interfaces": [ "CSSMatrix",
                        "DOMMatrix",
                        "DOMMatrixReadOnly",
                        "Point" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "High Resolution Time": {
        "overview":   [ "Performance API" ],
        "interfaces": [ "PerformanceEntry",
                        "PerformanceMark",
                        "PerformanceMeasure",
                        "PerformanceNavigation",
                        "PerformanceResourceTiming",
                        "PerformanceTiming",
                        "DOMHighResTimeStamp" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "HTML DOM": {
        "interfaces": [ "BeforeUnloadEvent",
                        "DOMStringMap",
                        "ErrorEvent",
                        "GlobalEventHandlers",
                        "HashChangeEvent",
                        "ImageData",
                        "HTMLAnchorElement",
                        "HTMLAreaElement",
                        "HTMLAudioElement",
                        "HTMLBaseElement",
                        "HTMLBaseFontElement",
                        "HTMLBodyElement",
                        "HTMLBRElement",
                        "HTMLButtonElement",
                        "HTMLCanvasElement",
                        "HTMLContentElement",
                        "HTMLDataElement",
                        "HTMLDataListElement",
                        "HTMLDialogElement",
                        "HTMLDivElement",
                        "HTMLDListElement",
                        "HTMLDocument",
                        "HTMLElement",
                        "HTMLEmbedElement",
                        "HTMLFieldSetElement",
                        "HTMLFormControlsCollection",
                        "HTMLFormElement",
                        "HTMLFrameSetElement",
                        "HTMLHeadElement",
                        "HTMLHeadingElement",
                        "HTMLHRElement",
                        "HTMLHtmlElement",
                        "HTMLIFrameElement",
                        "HTMLImageElement",
                        "HTMLInputElement",
                        "HTMLIsIndexElement",
                        "HTMLKeygenElement",
                        "HTMLLabelElement",
                        "HTMLLegendElement",
                        "HTMLLIElement",
                        "HTMLLinkElement",
                        "HTMLMapElement",
                        "HTMLMediaElement",
                        "HTMLMetaElement",
                        "HTMLMeterElement",
                        "HTMLModElement",
                        "HTMLObjectElement",
                        "HTMLOListElement",
                        "HTMLOptGroupElement",
                        "HTMLOptionElement",
                        "HTMLOptionsCollection",
                        "HTMLOutputElement",
                        "HTMLParagraphElement",
                        "HTMLParamElement",
                        "HTMLPictureElement",
                        "HTMLPreElement",
                        "HTMLProgressElement",
                        "HTMLQuoteElement",
                        "HTMLScriptElement",
                        "HTMLSelectElement",
                        "HTMLShadowElement",
                        "HTMLSourceElement",
                        "HTMLSpanElement",
                        "HTMLStyleElement",
                        "HTMLTableCaptionElement",
                        "HTMLTableCellElement",
                        "HTMLTableColElement",
                        "HTMLTableDataCellElement",
                        "HTMLTableElement",
                        "HTMLTableHeaderCellElement",
                        "HTMLTableRowElement",
                        "HTMLTableSectionElement",
                        "HTMLTextAreaElement",
                        "HTMLTemplateElement",
                        "HTMLTimeElement",
                        "HTMLTitleElement",
                        "HTMLTrackElement",
                        "HTMLUListElement",
                        "HTMLUnknownElement",
                        "HTMLVideoElement",
                        "History",
                        "Location",
                        "MessageChannel",
                        "MessageEvent",
                        "MessagePort",
                        "Navigator",
                        "NavigatorGeolocation",
                        "NavigatorID",
                        "NavigatorLanguage",
                        "NavigatorOnLine",
                        "NavigatorPlugins",
                        "PageTransitionEvent",
                        "Plugin",
                        "PluginArray",
                        "PopStateEvent",
                        "PortCollection",
                        "PromiseRejectionEvent",
                        "RadioNodeList",
                        "Transferable",
                        "ValidityState",
                        "Window",
                        "WindowBase64",
                        "WindowEventHandlers",
                        "WindowTimers" ],
        "methods":    [],
        "properties": [],
        "events":     [ "abort",
                        "autocomplete",
                        "autocompleteerror",
                        "DOMContentLoaded",
                        "afterprint",
                        "afterscriptexecute",
                        "beforeprint",
                        "beforescriptexecute",
                        "beforeunload",
                        "blur",
                        "cancel",
                        "change",
                        "click",
                        "close",
                        "connect",
                        "contextmenu",
                        "error",
                        "focus",
                        "hashchange",
                        "input",
                        "invalid",
                        "languagechange",
                        "load",
                        "loadend",
                        "loadstart",
                        "message",
                        "offline",
                        "online",
                        "open",
                        "pagehide",
                        "pageshow",
                        "popstate",
                        "progress",
                        "readystatechange",
                        "reset",
                        "select",
                        "show",
                        "sort",
                        "storage",
                        "submit",
                        "toggle",
                        "unload",
                        "loadeddata",
                        "loadedmetadata",
                        "canplay",
                        "playing",
                        "play",
                        "canplaythrough",
                        "seeked",
                        "seeking",
                        "stalled",
                        "suspend",
                        "timeupdate",
                        "volumechange",
                        "waiting",
                        "durationchange",
                        "emptied",
                        "unhandledrejection",
                        "rejectionhandled"]
    },
    "HTML Drag and Drop API": {
        "overview":   [ "HTML Drag and Drop API" ],
        "guides":     [ { "url":   "/en-US/docs/Web/Guide/HTML/Drag_and_drop",
                          "title": "Drag and drop" },
                        { "url":   "/en-US/docs/Web/Guide/HTML/Drag_operations",
                          "title": "Drag operations" }],
        "interfaces": [ "DataTransfer",
                        "DataTransferItem",
                        "DataTransferItemList",
                        "DragEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "dragstart",
                        "drag",
                        "dragenter",
                        "dragexit",
                        "dragleave",
                        "dragover",
                        "drop",
                        "dragend" ]
    },
    "HTML Microdata API": {
        "interfaces": [ "HTMLPropertiesCollection" ],
        "methods":    [ "Document.getItems()" ],
        "properties": [ "HTMLElement.properties",
                        "HTMLElement.itemValue",
                        "HTMLElement.itemScope",
                        "HTMLElement.itemType",
                        "HTMLElement.itemRef",
                        "HTMLElement.itemProp" ],
        "events":     []
    },
    "HTML Undo Manager API": {
        "interfaces": [ "UndoManager" ],
        "methods":    [],
        "properties": [ "Element.undoscope",
                        "Element.undomanager" ],
        "events":     []
    },
    "Identity": {
        "interfaces": [ "IdentityManager" ],
        "methods":    [],
        "properties": [ "Navigator.mozId"],
        "events":     []
    },
    "Idle API": {
        "overview":   [ "Idle API" ],
        "interfaces": [],
        "methods":    [ "Navigator.addIdleObserver()",
                        "Navigator.removeIdleObserver()" ],
        "properties": [],
        "events":     []
    },
    "Image Capture API": {
        "interfaces": [ "ImageCapture" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "IndexedDB": {
        "overview":   [ "IndexedDB API" ],
        "interfaces": [ "IDBCursor",
                        "IDBCursorSync",
                        "IDBCursorWithValue",
                        "IDBDatabase",
                        "IDBDatabaseException",
                        "IDBDatabaseSync",
                        "IDBEnvironment",
                        "IDBEnvironmentSync",
                        "IDBFactory",
                        "IDBFactorySync",
                        "IDBIndex",
                        "IDBIndexSync",
                        "IDBKeyRange",
                        "IDBObjectStore",
                        "IDBObjectStoreSync",
                        "IDBOpenDBRequest",
                        "IDBRequest",
                        "IDBTransaction",
                        "IDBTransactionSync",
                        "IDBVersionChangeEvent",
                        "IDBVersionChangeRequest" ],
        "methods":    [],
        "properties": [],
        "events":     [ "upgradeneeded",
                        "complete",
                        "abort",
                        "success",
                        "error",
                        "blocked",
                        "versionchange",
                        "close" ]
    },
    "Input Port API": {
        "interfaces": [ "AVInputPort",
                        "DisplayPortInputPort",
                        "HDMIInputPort",
                        "InputPort",
                        "InputPortManager" ],
        "methods":    [],
        "properties": [ "Navigator.inputPortManager" ],
        "events":     []
    },
    "Inter-App Connection API": {
        "interfaces": [ "MozInterAppConnection",
                        "MozInterAppConnectionRequest",
                        "MozInterAppMessageEvent",
                        "MozInterAppMessagePort" ],
        "methods":    [],
        "properties": [],
        "events":     [ "message" ]
    },
    "Kill Switch API": {
        "interfaces": [ "KillSwitch" ],
        "methods":    [],
        "properties": [ "Navigator.mozKillSwitch" ],
        "events":     []
    },
    "L10N API": {
        "interfaces": [ "L10n" ],
        "methods":    [],
        "properties": [ "Navigator.mozL10n" ],
        "events":     []
    },
    "Media Capture and Streams": {
        "overview":   [ "Media Capture and Streams API (Media Streams)" ],
        "guides":     [ { "url":   "/en-US/docs/Web/API/Media_Streams_API/Constraints",
                          "title": "Capabilities, constraints, and settings" } ],
        "interfaces": [ "AudioStreamTrack",
                        "BlobEvent",
                        "CanvasCaptureMediaStream",
                        "MediaDevices",
                        "MediaStream",
                        "MediaStreamTrack",
                        "MediaStreamTrackEvent",
                        "MediaTrackCapabilities",
                        "MediaTrackConstraints",
                        "MediaTrackSettings",
                        "MediaTrackSupportedConstraints",
                        "NavigatorUserMedia",
                        "NavigatorUserMediaError",
                        "VideoStreamTrack",
                        "DoubleRange",
                        "ConstrainDouble",
                        "LongRange",
                        "ConstrainLong",
                        "ConstrainBooleanParameters",
                        "ConstrainDOMStringParameters" ],
        "methods":    [ "HTMLCanvasElement.captureStream()" ],
        "properties": [ "Navigator.mediaDevices" ],
        "events":     [ "inactive",
                        "active",
                        "ended",
                        "mute",
                        "muted",
                        "unmute",
                        "overconstrained",
                        "ratechange",
                        "removetrack",
                        "addtrack",
                        "started",
                        "devicechange" ]
    },
    "Media Recorder API": {
        "overview":   [ "MediaRecorder API" ],
        "interfaces": [ "MediaRecorder" ],
        "methods":    [],
        "properties": [],
        "events":     [ "start_(MediaRecorder)",
                        "stop",
                        "dataavailable",
                        "pause",
                        "resume" ]
    },
    "Media Source Extensions": {
        "interfaces": [ "MediaSource",
                        "SourceBuffer",
                        "SourceBufferList",
                        "VideoPlaybackQuality",
                        "TrackDefault",
                        "TrackDefaultList" ],
        "methods":    [ "HTMLVideoElement.getVideoPlaybackQuality()",
                        "URL.createObjectURL()" ],
        "properties": [ "VideoTrack.sourceBuffer",
                        "TextTrack.sourceBuffer" ],
        "events":     [ "sourceopen",
                        "sourceended",
                        "sourceclose",
                        "updatestart",
                        "update",
                        "updateend",
                        "error",
                        "abort",
                        "addsourcebuffer",
                        "removesourcebuffer" ]
    },
    "Mobile Connection API": {
        "overview":   [ "Mobile Connection API" ],
        "interfaces": [ "MozMobileConnection",
                        "MozMobileConnectionInfo",
                        "MozMobileICCInfo",
                        "MozMobileNetworkInfo",
                        "MozMobileCFInfo",
                        "MozMobileCellInfo",
                        "MozIccManager",
                        "IccCardLockError",
                        "IccCardLockErrorEvent",
                        "MozStkCommandEvent",
                        "CFStateChangeEvent",
                        "DataErrorEvent",
                        "MozEmergencyCbModeEvent",
                        "MozOtaStatusEvent",
                        "MozCellBroadcastEvent",
                        "USSDReceivedEvent" ],
        "methods":    [],
        "properties": [ "Navigator.mozMobileConnections" ],
        "events":     [ "icccardlockerror",
                        "cardstatechange" ]
    },
    "Mobile Messaging API": {
        "overview":   [ "Mobile Messaging API" ],
        "interfaces": [ "MozSmsManager",
                        "MozSmsMessage",
                        "MozSmsEvent",
                        "MozSmsFilter",
                        "MozSmsSegmentInfo",
                        "MozMobileMessageManager",
                        "MozMmsMessage",
                        "MozMmsEvent",
                        "MozMobileMessageThread" ],
        "methods":    [],
        "properties": [ "Navigator.mozMobileMessage",
                        "Navigator.mozSMS"],
        "events":     [ "open",
                        "message",
                        "error",
                        "close",
                        "sending",
                        "sent",
                        "failed",
                        "deliverysuccess",
                        "deliveryerror",
                        "retrieving",
                        "received" ]
    },
    "Mozilla Payment API": {
        "interfaces": [ "PaymentProvider" ],
        "methods":    [],
        "properties": [ "Navigator.mozPaymentProvider" ],
        "events":     []
    },
    "MSISDN Verification API": {
        "interfaces": [ "NavigatorMobileId" ],
        "methods":    [],
        "properties": [ "Navigator.oscpu",
                        "Navigator.vendor",
                        "Navigator.vendorSub" ],
        "events":     []
    },
    "Navigation Timing": {
        "overview":   [ "Navigation timing API" ],
        "interfaces": [ "Performance",
                        "PerformanceNavigation",
                        "PerformanceTiming" ],
        "methods":    [],
        "properties": [ "Window.performance" ],
        "events":     []
    },
    "Network Information API": {
        "overview":   [ "Network Information API"],
        "interfaces": [ "NetworkInformation"],
        "methods":    [],
        "properties": [ "Navigator.connection" ],
        "events":     [ "change" ]
    },
    "Network Stats API": {
        "overview":   [ "Network Stats API" ],
        "interfaces": [ "MozNetworkStats",
                        "MozNetworkStatsData",
                        "MozNetworkStatsManager" ],
        "methods":    [],
        "properties": [ "Navigator.mozNetworkStats" ],
        "events":     []
    },
    "NFC API": {
        "overview":   [ "NFC API" ],
        "interfaces": [ "MozNDEFRecord",
                        "MozNFC",
                        "MozNFCPeer",
                        "MozNFCTag" ],
        "methods":    [],
        "properties": [ "Navigator.mozNfc" ],
        "events":     []
    },
    "Page Visibility API": {
        "overview":   [ "Page Visibility API" ],
        "interfaces": [],
        "methods":    [],
        "properties": [ "Document.hidden",
                        "Document.visibilityState" ],
        "events":     [ "visibilitychange" ]
    },
    "Performance Timeline API": {
        "overview":   [ "Performance Timeline" ],
        "interfaces": [ "Performance",
                        "PerformanceEntry",
                        "PerformanceObserver",
                        "PerformanceObserverEntryList",
                        "PerformanceResourceTiming" ],
        "methods":    [],
        "properties": [ "Window.performance" ],
        "events":     []
    },
    "Permissions API": {
        "overview":   [ "Permissions API" ],
        "interfaces": [ "Permissions",
                        "PermissionStatus" ],
        "methods":    [],
        "properties": [ "Navigator.permissions",
                        "WorkerNavigator.permissions"],
        "events":     []
    },
    "Permissions API (Firefox OS)": {
        "overview":   [ "Permissions API (Firefox OS)" ],
        "interfaces": [ "PermissionSettings" ],
        "methods":    [],
        "properties": [ "Navigator.mozPermissionSettings"],
        "events":     []
    },
    "Pointer Events": {
        "overview":   [ "Pointer events" ],
        "interfaces": [ "PointerEvent"],
        "methods":    [ "Element.setPointerCapture()",
                        "Element.releasePointerCapture()" ],
        "properties": [ "Element.ongotpointercapture",
                        "Element.onlostpointercapture",
                        "GlobalEventHandlers.onpointerdown",
                        "GlobalEventHandlers.onpointermove",
                        "GlobalEventHandlers.onpointerup",
                        "GlobalEventHandlers.onpointercancel",
                        "GlobalEventHandlers.onpointerover",
                        "GlobalEventHandlers.onpointerout",
                        "GlobalEventHandlers.onpointerenter",
                        "GlobalEventHandlers.onpointerleave",
                        "Navigator.maxTouchPoints" ],
        "events":     [ "pointerover",
                        "pointerenter",
                        "pointerdown",
                        "pointermove",
                        "pointerup",
                        "pointercancel",
                        "pointerout",
                        "pointerleave",
                        "gotpointercapture",
                        "lostpointercapture"]
    },
    "Pointer Lock API": {
        "overview":   [ "Pointer Lock API" ],
        "interfaces": [],
        "methods":    [ "Element.requestPointerLock()",
                        "Document.exitPointerLock()" ],
        "properties": [ "Document.pointerLockElement",
                        "Document.onpointerlockchange",
                        "Document.onpointerlockerror" ],
        "events":     [ "pointerlockchange",
                        "pointerlockerror"]
    },
    "Power Management API": {
        "overview":   [ "Power Management API" ],
        "interfaces": [ "PowerManager" ],
        "methods":    [],
        "properties": [ "Navigator.mozPower" ],
        "events":     []
    },
    "Presentation API": {
        "interfaces": [ "Presentation",
                        "PresentationAvailability",
                        "PresentationDeviceInfoManager",
                        "PresentationRequest",
                        "PresentationSession",
                        "PresentationSessionConnectEvent" ],
        "methods":    [],
        "properties": [ "Navigator.presentation",
                        "Navigator.mozPresentationDeviceInfo" ],
        "events":     [ "change",
                        "sessionavailable",
                        "sessionconnect" ]
    },
    "Proximity Events": {
        "overview":   [ "Proximity Events" ],
        "interfaces": [ "DeviceProximityEvent",
                        "UserProximityEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "userproximity",
                        "deviceproximity" ]
    },
    "Push API": {
        "overview":   [ "Push API" ],
        "interfaces": [ "PushManager",
                        "PushSubscription",
                        "PushEvent",
                        "PushMessageData" ],
        "methods":    [],
        "properties": [ "ServiceWorkerRegistration.pushManager",
                        "ServiceWorkerGlobalScope.onpush",
                        "ServiceWorkerGlobalScope.onpushsubscriptionchange" ],
        "events":     [ "push",
                        "pushsubscriptionchange" ]
    },
    "Request Sync API": {
        "interfaces": [ "RequestManager",
                        "RequestSyncTask",
                        "RequestSyncApp" ],
        "methods":    [],
        "properties": [ "Navigator.syncManager"],
        "events":     []
    },
    "Resource Statistics API": {
        "interfaces": [ "NetworkStatsData",
                        "PowerStatsData",
                        "ResourceStats",
                        "ResourceStatsManager",
                        "ResourceStatsAlarm" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Resource Timing API": {
        "overview":   [ "Resource Timing API" ],
        "interfaces": [ "Performance",
                        "PerformanceEntry",
                        "PerformanceResourceTiming" ],
        "methods":    [],
        "properties": [ "Window.performance" ],
        "events":     []
    },
    "Screen Orientation API": {
        "guides":     [ { "url":   "/en-US/docs/Web/API/CSS_Object_Model/Managing_screen_orientation",
                          "title": "Managing screen orientation" } ],
        "interfaces": [ "ScreenOrientation" ],
        "methods":    [],
        "properties": [ "Screen.orientation"],
        "events":     [ "change" ]
    },
    "Selection API": {
        "interface":  [ "Selection" ],
        "properties": [ "Document.onselectionchange",
                        "GlobalEventHandlers.onselectstart" ],
        "methods":    [ "Document.getSelection()",
                        "Window.getSelection()" ],
        "events":     [ "selectionchange",
                        "selectstart" ]
    },
    "Server Sent Events": {
        "overview":   [ "Server-sent events" ],
        "interfaces": [ "EventSource" ],
        "methods":    [],
        "properties": [],
        "events":     [ "open",
                        "message",
                        "error" ]
    },
    "Service Workers API": {
        "overview":   [ "Service Worker API" ],
        "interfaces": [ "Cache",
                        "CacheStorage",
                        "Client",
                        "Clients",
                        "ExtendableEvent",
                        "FetchEvent",
                        "InstallEvent",
                        "NotificationEvent",
                        "PeriodicSyncEvent",
                        "PeriodicSyncManager",
                        "PeriodicSyncRegistration",
                        "ServiceWorker",
                        "ServiceWorkerContainer",
                        "ServiceWorkerGlobalScope",
                        "ServiceWorkerRegistration",
                        "SyncEvent",
                        "SyncManager",
                        "SyncRegistration",
                        "WindowClient" ],
        "methods":    [],
        "properties": [ "Navigator.serviceWorker" ],
        "events":     [ "statechange",
                        "updatefound",
                        "controllerchange",
                        "error",
                        "message",
                        "install",
                        "activate",
                        "fetch" ]
    },
    "Settings API": {
        "overview":   [ "Settings API" ],
        "guides":     [ { "url":   "/docs/Mozilla/Firefox_OS/Platform/Settings_list",
                          "title": "Firefox OS settings list" } ],
        "interfaces": [ "SettingsManager",
                        "MozSettingsEvent",
                        "SettingsLock" ],
        "methods":    [],
        "properties": [ "Navigator.mozSettings" ],
        "events":     [ "settingchange"]
    },
    "Simple Push API": {
        "overview":   [ "Simple Push API" ],
        "interfaces": [ "PushManager" ],
        "methods":    [],
        "properties": [ "Navigator.mozPush" ],
        "events":     [ "success",
                        "error" ]
    },
    "Social API": {
        "interfaces": [ "MozSocial" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Speaker Manager API": {
        "interfaces": [ "MozSpeakerManager" ],
        "methods":    [],
        "properties": [],
        "events":     [ "speakerforcedchange" ]
    },
    "SVG": {
        "interfaces": [ "SVGAElement",
                        "SVGAltGlyphElement",
                        "SVGAngle",
                        "SVGAnimateColorElement",
                        "SVGAnimatedAngle",
                        "SVGAnimatedBoolean",
                        "SVGAnimatedEnumeration",
                        "SVGAnimatedInteger",
                        "SVGAnimatedLength",
                        "SVGAnimatedLengthList",
                        "SVGAnimatedNumber",
                        "SVGAnimatedNumberList",
                        "SVGAnimatedPathData",
                        "SVGAnimatedPoints",
                        "SVGAnimatedPreserveAspectRatio",
                        "SVGAnimatedRect",
                        "SVGAnimatedString",
                        "SVGAnimatedTransformList",
                        "SVGAnimateElement",
                        "SVGAnimateMotionElement",
                        "SVGAnimateTransformElement",
                        "SVGAnimationElement",
                        "SVGCircleElement",
                        "SVGClipPathElement",
                        "SVGComponentTransferFunctionElement",
                        "SVGCursorElement",
                        "SVGDefsElement",
                        "SVGDescElement",
                        "SVGDocument",
                        "SVGElement",
                        "SVGEllipseElement",
                        "SVGFEBlendElement",
                        "SVGFEColorMatrixElement",
                        "SVGFEComponentTransferElement",
                        "SVGFECompositeElement",
                        "SVGFEConvolveMatrixElement",
                        "SVGFEDiffuseLightingElement",
                        "SVGFEDisplacementMapElement",
                        "SVGFEDistantLightElement",
                        "SVGFEDropShadowElement",
                        "SVGFEFloodElement",
                        "SVGFEFuncAElement",
                        "SVGFEFuncBElement",
                        "SVGFEFuncGElement",
                        "SVGFEFuncRElement",
                        "SVGFEGaussianBlurElement",
                        "SVGFEImageElement",
                        "SVGFEMergeElement",
                        "SVGFEMergeNodeElement",
                        "SVGFEMorphologyElement",
                        "SVGFEOffsetElement",
                        "SVGFEPointLightElement",
                        "SVGFESpecularLightingElement",
                        "SVGFESpotLightElement",
                        "SVGFETileElement",
                        "SVGFETurbulenceElement",
                        "SVGFilterElement",
                        "SVGFilterPrimitiveStandardAttributes",
                        "SVGFitToViewBox",
                        "SVGFontElement",
                        "SVGFontFaceElement",
                        "SVGFontFaceFormatElement",
                        "SVGFontFaceNameElement",
                        "SVGFontFaceSrcElement",
                        "SVGFontFaceUriElement",
                        "SVGForeignObjectElement",
                        "SVGGElement",
                        "SVGGlyphElement",
                        "SVGGradientElement",
                        "SVGGraphicsElement",
                        "SVGMarkerElement",
                        "SVGHKernElement",
                        "SVGImageElement",
                        "SVGLength",
                        "SVGLengthList",
                        "SVGLinearGradientElement",
                        "SVGLineElement",
                        "SVGMaskElement",
                        "SVGMatrix",
                        "SVGMetadataElement",
                        "SVGMissingGlyphElement",
                        "SVGMPathElement",
                        "SVGNumber",
                        "SVGNumberList",
                        "SVGPathElement",
                        "SVGPathSeg",
                        "SVGPathSegClosePath",
                        "SVGPathSegMovetoAbs",
                        "SVGPathSegMovetoRel",
                        "SVGPathSegLinetoAbs",
                        "SVGPathSegLinetoRel",
                        "SVGPathSegCurvetoCubicAbs",
                        "SVGPathSegCurvetoCubicRel",
                        "SVGPathSegCurvetoQuadraticAbs",
                        "SVGPathSegCurvetoQuadraticRel",
                        "SVGPathSegArcAbs",
                        "SVGPathSegArcRel",
                        "SVGPathSegLinetoHorizontalAbs",
                        "SVGPathSegLinetoHorizontalRel",
                        "SVGPathSegLinetoVerticalAbs",
                        "SVGPathSegLinetoVerticalRel",
                        "SVGPathSegCurvetoCubicSmoothAbs",
                        "SVGPathSegCurvetoCubicSmoothRel",
                        "SVGPathSegCurvetoQuadraticSmoothAbs",
                        "SVGPathSegCurvetoQuadraticSmoothRel",
                        "SVGPathSegList",
                        "SVGPatternElement",
                        "SVGPoint",
                        "SVGPointList",
                        "SVGPolygonElement",
                        "SVGPolylineElement",
                        "SVGPreserveAspectRatio",
                        "SVGRadialGradientElement",
                        "SVGRect",
                        "SVGRectElement",
                        "SVGScriptElement",
                        "SVGSetElement",
                        "SVGStopElement",
                        "SVGStringList",
                        "SVGStylable",
                        "SVGStyleElement",
                        "SVGSVGElement",
                        "SVGSwitchElement",
                        "SVGSymbolElement",
                        "SVGTests",
                        "SVGTextContentElement",
                        "SVGTextElement",
                        "SVGTextPathElement",
                        "SVGTextPositioningElement",
                        "SVGTitleElement",
                        "SVGTransform",
                        "SVGTransformable",
                        "SVGTransformList",
                        "SVGTRefElement",
                        "SVGTSpanElement",
                        "SVGUnitTypes",
                        "SVGURIReference",
                        "SVGUseElement",
                        "SVGViewElement",
                        "SVGVKernElement",
                        "SVGZoomAndPan",
                        "SVGZoomEvent",
                        "TimeEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "focusin",
                        "focusout",
                        "activate",
                        "click",
                        "mousedown",
                        "mouseup",
                        "mouseover",
                        "mousemove",
                        "mouseout",
                        "DOMSubtreeModified",
                        "DOMNodeInserted",
                        "DOMNodeRemoved",
                        "DOMNodeRemovedFromDocument",
                        "DOMNodeInsertedIntoDocument",
                        "DOMAttrModified",
                        "DOMCharacterDataModified",
                        "SVGLoad",
                        "SVGUnload",
                        "SVGAbort",
                        "SVGError",
                        "SVGResize",
                        "SVGScroll",
                        "SVGZoom",
                        "beginEvent",
                        "endEvent",
                        "repeatEvent" ]
    },
    "System Update API": {
        "interfaces": [ "SystemUpdateProvider",
                        "SystemUpdateManager" ],
        "methods":    [],
        "properties": [ "Navigator.updateManager" ],
        "events":     []
    },
    "TCP Socket API": {
        "overview":   [ "TCP Socket API" ],
        "interfaces": [ "TCPSocket",
                        "TCPServerSocket" ],
        "methods":    [],
        "properties": [ "Navigator.mozTCPSocket"],
        "events":     [ "data",
                        "drain",
                        "connect",
                        "error" ]
    },
    "Time and Clock API": {
        "overview":   [ "Time and Clock API" ],
        "interfaces": [ "MozTimeManager" ],
        "methods":    [],
        "properties": [ "Navigator.mozTime",
                        "Window.onmoztimechange" ],
        "events":     [ "moztimechange" ]
    },
    "Touch Events": {
        "overview":   [ "Touch events" ],
        "interfaces": [ "Touch",
                        "TouchEvent",
                        "TouchList" ],
        "methods":    [],
        "properties": [],
        "events":     [ "touchstart",
                        "touchend",
                        "touchmove",
                        "touchcancel" ]
    },
    "TV API": {
        "interfaces": [ "TVChannel",
                        "TVCurrentChannelChangedEvent",
                        "TVCurrentSourceChangedEvent",
                        "TVEITBroadcastedEvent",
                        "TVManager",
                        "TVProgram",
                        "TVScanningStateChangedEvent",
                        "TVSource",
                        "TVTuner" ],
        "methods":    [],
        "properties": [],
        "events":     [ "currentsourcechanged",
                        "currentchannelchanged",
                        "eitbroadcasted",
                        "scanningstatechanged" ]
    },
    "UDP Socket API": {
        "interfaces": [ "UDPMessageEVent",
                        "UDPSocket" ],
        "methods":    [],
        "properties": [],
        "events":     [ "message" ]
    },
    "URL API": {
        "interfaces": [ "URL",
                        "URLSearchParams",
                        "HTMLHyperlinkElementUtils",
                        "URLUtilsReadOnly" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "User Timing API": {
        "interfaces": [ "Performance",
                        "PerformanceEntry",
                        "PerformanceMark",
                        "PerformanceMeasure" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "Vibration API": {
        "overview":   [ "Vibration API" ],
        "interfaces": [],
        "methods":    [ "Navigator.vibrate()" ],
        "properties": [],
        "events":     []
    },
    "Voicemail API": {
        "interfaces": [ "MozVoicemail",
                        "MozVoicemailStatus",
                        "MozVoicemailEvent" ],
        "methods":    [],
        "properties": [ "Navigator.mozVoicemail" ],
        "events":     []
    },
    "Wake Lock API": {
        "overview":   [ "Wake Lock API"],
        "interfaces": [ "MozWakeLock" ],
        "methods":    [ "Navigator.requestWakeLock()"],
        "properties": [],
        "events":     []
    },
    "Web Activities": {
        "overview":   [ "Web Activities" ],
        "interfaces": [ "MozActivity",
                        "MozActivityRequestHandler",
                        "MozActivityOptions" ],
        "methods":    [ "Navigator.mozSetMessageHandler()" ],
        "properties": [],
        "events":     []
    },
    "Web Animations": {
        "overview":   [ "Web Animations API" ],
        "interfaces": [ "Animation",
                        "AnimationEffectReadOnly",
                        "AnimationEffectTiming",
                        "AnimationEffectTimingReadOnly",
                        "AnimationEvent",
                        "AnimationTimeline",
                        "AnimationPlaybackEvent",
                        "DocumentTimeline",
                        "KeyframeEffect",
                        "KeyframeEffectReadOnly",
                        "SharedKeyframeList" ],
        "methods":    [ "Document.getAnimations()",
                        "Element.animate()"],
        "properties": [ "Document.timeline",
                        "AnimationEffectTimingProperties" ],
        "events":     [  ]
    },
    "Web Audio API": {
        "overview":   [ "Web Audio API" ],
        "interfaces": [ "AnalyserNode",
                        "AudioBuffer",
                        "AudioBufferSourceNode",
                        "AudioChannelManager",
                        "AudioContext",
                        "AudioDestinationNode",
                        "AudioListener",
                        "AudioNode",
                        "AudioParam",
                        "AudioProcessingEvent",
                        "BiquadFilterNode",
                        "ChannelMergerNode",
                        "ChannelSplitterNode",
                        "ConvolverNode",
                        "DelayNode",
                        "DynamicsCompressorNode",
                        "GainNode",
                        "MediaStreamAudioDestinationNode",
                        "MediaStreamAudioSourceNode",
                        "NotifyAudioAvailableEvent",
                        "OfflineAudioCompletionEvent",
                        "OfflineAudioContext",
                        "OscillatorNode",
                        "PannerNode",
                        "PeriodicWave",
                        "WaveShaperNode",
                        "ScriptProcessorNode",
                        "StereoPannerNode" ],
        "methods":    [],
        "properties": [],
        "events":     [ "statechange",
                        "complete",
                        "ended",
                        "message",
                        "loaded",
                        "audioprocess",
                        "nodecreate"]
    },
    "Web Components": {
        "overview":   [ "Web Components" ],
        "interfaces": [ "HTMLContentElement",
                        "HTMLShadowElement",
                        "ShadowRoot" ],
        "methods":    [ "Document.register()" ],
        "properties": [],
        "events":     []
    },
    "Web Crypto API": {
        "overview":   [ "Web Crypto API" ],
        "interfaces": [ "Crypto",
                        "CryptoKey",
                        "RandomSource",
                        "SubtleCrypto" ],
        "methods":    [],
        "properties": [ "Window.crypto" ],
        "events":     []
    },
    "WebGL": {
        "overview": [ "WebGL API" ],
        "interfaces": [ "WebGLRenderingContext",
                        "WebGLBuffer",
                        "WebGLFramebuffer",
                        "WebGLRenderbuffer",
                        "WebGLObject",
                        "WebGLProgram",
                        "WebGLShader",
                        "WebGLTexture",
                        "WebGLUniformLocation",
                        "WebGLActiveInfo",
                        "WebGLShaderPrecisionFormat",
                        "WebGLContextEvent",
                        "WebGLQuery",
                        "WebGLSampler",
                        "WebGLSync",
                        "WebGLTransformFeedback",
                        "WebGLVertexArrayObject",
                        "WebGL2RenderingContext",
                        "WebGLVertexArrayObjectOES",
                        "WEBGL_compressed_texture_s3tc",
                        "WEBGL_compressed_texture_atc",
                        "WEBGL_compressed_texture_etc1",
                        "WEBGL_compressed_texture_pvrtc",
                        "WEBGL_debug_renderer_info",
                        "WEBGL_debug_shaders",
                        "WEBGL_depth_texture",
                        "OES_element_index_uint",
                        "EXT_frag_depth",
                        "WEBGL_lose_context",
                        "EXT_texture_filter_anisotropic",
                        "EXT_sRGB",
                        "OES_standard_derivatives",
                        "OES_texture_float",
                        "WEBGL_draw_buffers",
                        "OES_texture_float_linear",
                        "EXT_shader_texture_lod",
                        "OES_texture_half_float",
                        "OES_texture_half_float_linear",
                        "WEBGL_color_buffer_float",
                        "EXT_color_buffer_half_float",
                        "OES_vertex_array_object",
                        "ANGLE_instanced_arrays",
                        "EXT_blend_minmax",
                        "WebGLTimerQueryEXT",
                        "EXT_disjoint_timer_query" ],
        "methods":    [],
        "properties": [],
        "events":     [ "webglcontextlost",
                        "webglcontextrestored",
                        "webglcontextcreationerror" ]
    },
    "Web Manifest": {
        "interfaces": [],
        "methods": [],
        "properties": ["Window.oninstall"],
        "events": [ "install"]
    },
    "Web MIDI API": {
        "interfaces": [ "MIDIInputMap",
                        "MIDIOutputMap",
                        "MIDIAccess",
                        "MIDIPort",
                        "MIDIInput",
                        "MIDIOutput",
                        "MIDIMessageEvent",
                        "MIDIConnectionEvent" ],
        "methods":    [ "Navigator.requestMIDIAccess()"],
        "properties": [],
        "events":     [ "statechange",
                        "midimessage"]
    },
    "Web Notifications": {
        "overview":   [ "Notifications API" ],
        "interfaces": [ "Notification",
                        "NotificationEvent" ],
        "methods":    [ "ServiceWorkerRegistration.showNotification()",
                        "ServiceWorkerRegistration.getNotifications()" ],
        "properties": [ "ServiceWorkerGlobalScope.onnotificationclick"],
        "events":     [ "error",
                        "click",
                        "close",
                        "show" ]
    },
    "WebRTC": {
        "overview":   [ "WebRTC API" ],
        "interfaces": [ "MediaStreamEvent",
                        "RTCConfiguration",
                        "RTCDataChannel",
                        "RTCDataChannelEvent",
                        "RTCIdentityErrorEvent",
                        "RTCIdentityEvent",
                        "RTCPeerConnection",
                        "RTCPeerConnectionIceEvent",
                        "RTCSessionDescription",
                        "RTCSessionDescriptionCallback",
                        "RTCStatsReport",
                        "RTCCertificate",
                        "RTCIdentityProviderRegistrar",
                        "RTCRtpReceiver",
                        "RTCRtpSender" ],
        "methods":    [],
        "properties": [ "Navigator.mediaDevices" ],
        "events":     [ "addstream",
                        "icecandidate",
                        "iceconnectionstatechange",
                        "icegatheringstatechange",
                        "negotiationneeded",
                        "removestream",
                        "signalingstatechange",
                        "datachannel",
                        "close",
                        "error",
                        "message",
                        "open",
                        "tonechange",
                        "identityresult",
                        "idpassertionerror",
                        "idpvalidationerror",
                        "peeridentity",
                        "isolationchange" ]
    },
    "Websockets API": {
        "overview":   [ "Websockets API" ],
        "interfaces": [ "WebSocket",
                        "CloseEvent",
                        "MessageEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "open",
                        "message",
                        "error",
                        "close" ]
    },
    "Web Speech API": {
        "interfaces": [ "SpeechGrammar",
                        "SpeechGrammarList",
                        "SpeechRecognition",
                        "SpeechRecognitionAlternative",
                        "SpeechRecognitionError",
                        "SpeechRecognitionEvent",
                        "SpeechRecognitionResult",
                        "SpeechRecognitionResultList",
                        "SpeechSynthesis",
                        "SpeechSynthesisErrorEvent",
                        "SpeechSynthesisEvent",
                        "SpeechSynthesisUtterance",
                        "SpeechSynthehesisVoice" ],
        "methods":    [],
        "properties": [],
        "events":     [ "audiostart",
                        "boundary",
                        "mark",
                        "soundstart",
                        "speechstart",
                        "speechend",
                        "soundend",
                        "audioend",
                        "result",
                        "nomatch",
                        "error_(SpeechRecognitionError)",
                        "error_(SpeechSynthesis)",
                        "start_(SpeechRecognition)",
                        "start_(SpeechSynthesis)",
                        "pause_(SpeechSynthesis)",
                        "resume",
                        "end_(SpeechRecognition)",
                        "end_(SpeechSynthesis)"]
    },
    "Web Storage API": {
        "overview":   [ "Web Storage API" ],
        "interfaces": [ "Storage",
                        "StorageEvent" ],
        "methods":    [],
        "properties": [ "Window.sessionStorage",
                        "Window.localStorage" ],
        "events":     [ "storage" ]
    },
    "Web Telephony API": {
        "overview":   [ "Web Telephony API" ],
        "interfaces": [ "Telephony",
                        "TelephonyCall",
                        "TelephonyCallGroup",
                        "CallEvent",
                        "CallGroup",
                        "MMICall" ],
        "methods":    [],
        "properties": [ "Navigator.mozTelephony" ],
        "events":     [ "incoming" ]
    },
    "Web Workers API": {
        "overview":   [ "Web Workers API" ],
        "interfaces": [ "AbstractWorker",
                        "ChromeWorker",
                        "DedicatedWorkerGlobalScope",
                        "ServiceWorker",
                        "SharedWorker",
                        "SharedWorkerGlobalScope",
                        "Worker",
                        "WorkerGlobalScope",
                        "WorkerLocation",
                        "WorkerNavigator" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "WebVR API": {
        "overview":   [ "WebVR API" ],
        "interfaces": [ "VRDisplay",
                        "VRDisplayCapabilities",
                        "VRPose",
                        "VREyeParameters",
                        "VRFieldOfView",
                        "VRStageParameters" ],
        "methods":    [ "Navigator.getVRDisplays()" ],
        "properties": [ "Gamepad.displayId",
                        "Navigator.activeVRDisplays" ],
        "events":     [ "vrdisplayconnected",
                        "vrdisplaydisconnected",
                        "vrdisplaypresentchange" ]
    },
    "WebVTT": {
        "guides":     [ { "url":   "/docs/Web/API/Web_Video_Text_Tracks_Format",
                          "title": "WebVTT file format" } ],
        "interfaces": [ "VTTCue",
                        "VTTRegion",
                        "TextTrack",
                        "TextTrackCue",
                        "TextTrackCueList",
                        "TextTrackList",
                        "TrackEvent" ],
        "methods":    [],
        "properties": [],
        "events":     [ "change",
                        "addtrack",
                        "removetrack",
                        "cuechange",
                        "enter",
                        "exit" ]
    },
    "WiFi Information API": {
        "overview":   [ "WiFi Information API" ],
        "interfaces": [ "WifiManager",
                        "MozWifiManager",
                        "MozWifiCapabilities",
                        "MozWifiConnectionInfo",
                        "MozWifiConnection",
                        "MozWifiNetwork",
                        "MozWifiConnectionInfoEvent",
                        "MozWifiStationChangeEvent",
                        "MozWifiStatusChangeEvent" ],
        "methods":    [],
        "properties": [ "Navigator.mozWifiManager" ],
        "events":     [ "statuschange",
                        "connectioninfoupdate" ]
    },
    "WiFi P2P API": {
        "interfaces": [ "MozWifiP2pGroupOwner",
                        "MozWifiP2pManager",
                        "MozWifiP2pStatusChangeEvent" ],
        "methods":    [],
        "properties": [ "Navigator.mozWifiP2pManager"],
        "events":     [ "peerinfoupdate",
                        "statuschange",
                        "enabled",
                        "disabled" ]
    },
    "WiFi Tethering API": {
        "interfaces": [ "MozTetheringManager" ],
        "methods":    [],
        "properties": [ "Navigator.mozTetheringManager" ],
        "events":     []
    },
    "XDomain": {
        "interfaces": [ "XDomainrequest" ],
        "methods":    [],
        "properties": [],
        "events":     []
    },
    "XMLHttpRequest": {
        "guides":     [ { "url":   "/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest",
                          "title": "Using XMLHttpRequest" },
                        { "url":   "/docs/Web/API/XMLHttpRequest/HTML_in_XMLHttpRequest",
                          "title": "HTML in XMLHttpRequest" },
                        { "url":   "/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest_in_IE6",
                          "title": "Using XMLHttpRequest in IE6" },
                        { "url":   "/docs/XMLHttpRequest_changes_for_Gecko1.8",
                          "title": "XMLHttpRequest changes for Gecko 1.8"} ],
        "interfaces": [ "FormData",
                        "XMLHttpRequest",
                        "XMLHttpRequestEventTarget",
                        "XMLHttpRequestUpload" ],
        "methods":    [],
        "properties": [],
        "events":     [ "loadstart",
                        "progress",
                        "abort",
                        "error",
                        "load",
                        "timeout",
                        "loadend",
                        "readystatechange" ]
    }
}
